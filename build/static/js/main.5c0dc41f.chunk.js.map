{"version":3,"sources":["redux/actions.js","redux/action_types.js","screens/orders/orderTableActions.js","screens/orders/orderModal.js","screens/orders/ordersTable.js","screens/orders/orders.js","redux/reducers.js","redux/store.js","App.js","index.js"],"names":["getList","page","arguments","length","undefined","companyName","sort","limit","dispatch","axios","get","concat","then","response","type","payload","orderList","data","OrderPaginationActions","handleFirstPageButtonClick","event","_this","props","onChangePage","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","_this$props","this","classes","theme","react_default","a","createElement","className","root","IconButton_default","onClick","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Component","connect","withStyles","flexShrink","color","palette","text","secondary","marginLeft","spacing","unit","withTheme","orderModal","_ref","order","close","DialogTitle_default","id","DialogContent_default","TextField_default","autoFocus","margin","label","fullWidth","value","format","orderDate","lastModifiedDate","totalPrice","status","plan","DialogActions_default","Button_default","OrdersTable","state","sortDirection","modal","handleChangePage","setState","sortByDate","console","log","selectOrder","selected","closeModal","_this2","orders","Paper_default","tabIndex","Dialog_default","open","Table_default","table","TableHead_default","TableRow_default","TableCell_default","align","Tooltip_default","title","placement","enterDelay","TableSortLabel_default","active","TableBody_default","map","key","component","scope","Fab_default","size","Edit_default","TableFooter_default","TablePagination_default","rowsPerPageOptions","colSpan","ActionsComponent","OrderTableActions","width","marginTop","overflowX","minWidth","dateHeader","cursor","Orders","input","onChange","filter","target","setTimeout","AppBar_default","position","Toolbar_default","Typography_default","variant","search","searchIcon","Search_default","InputBase_default","placeholder","inputRoot","inputInput","ordersTable","ordersReducer","grow","flexGrow","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","Object","defineProperty","borderRadius","shape","backgroundColor","fade","common","white","&:hover","marginRight","breakpoints","up","height","pointerEvents","display","alignItems","justifyContent","initialState","combineReducers","action","objectSpread","createStore","reducers","applyMiddleware","thunk","Main","styled","_templateObject","App","es","store","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5c0dc41f.chunk.js","sourcesContent":["import { GET_LIST } from \"./action_types\";\nimport axios from \"axios\";\n\nconst URL = \"https://5c89c22a41fb3f001434be28.mockapi.io/orders\";\n\nexport const getList = (page = 1, companyName, sort, limit = 10) => {\n  return dispatch => {\n    axios\n      .get(\n        `${URL}?page=${page}&limit=${limit}&sortBy=orderDate&order=${sort}&${\n          companyName ? `search=${companyName}` : \"\"\n        }`\n      )\n      .then(response => {\n        dispatch({\n          type: GET_LIST,\n          payload: {\n            orderList: response.data\n          }\n        });\n      });\n  };\n};\n","export const GET_LIST = \"GET_LIST\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\n\nimport { getList } from \"../../redux/actions\";\n\nconst actionsStyles = theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing.unit * 2.5\n  }\n});\n\nclass OrderPaginationActions extends Component {\n  handleFirstPageButtonClick = event => {\n    this.props.get(1);\n    this.props.onChangePage(event, 0);\n  };\n\n  handleBackButtonClick = event => {\n    const page = this.props.page + 1;\n    this.props.get(page - 1);\n    this.props.onChangePage(event, this.props.page - 1);\n  };\n\n  handleNextButtonClick = event => {\n    const page = this.props.page + 1;\n    this.props.get(page + 1);\n    this.props.onChangePage(event, this.props.page + 1);\n  };\n\n  handleLastPageButtonClick = event => {\n    this.props.get(\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage))\n    );\n    this.props.onChangePage(\n      event,\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1)\n    );\n  };\n\n  render() {\n    const { classes, count, page, rowsPerPage, theme } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={this.handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"First Page\"\n        >\n          {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={this.handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"Previous Page\"\n        >\n          {theme.direction === \"rtl\" ? (\n            <KeyboardArrowRight />\n          ) : (\n            <KeyboardArrowLeft />\n          )}\n        </IconButton>\n        <IconButton\n          onClick={this.handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Next Page\"\n        >\n          {theme.direction === \"rtl\" ? (\n            <KeyboardArrowLeft />\n          ) : (\n            <KeyboardArrowRight />\n          )}\n        </IconButton>\n        <IconButton\n          onClick={this.handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"Last Page\"\n        >\n          {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    get: page => {\n      dispatch(getList(page));\n    }\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(\n  withStyles(actionsStyles, {\n    withTheme: true\n  })(OrderPaginationActions)\n);\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { format } from \"date-fns\";\n\nexport default ({ order, close }) => (\n  <div>\n    <DialogTitle id=\"form-dialog-title\">Order #{order.id}</DialogTitle>\n    <DialogContent>\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        label=\"Order Id\"\n        fullWidth\n        disabled\n        value={order.id}\n      />\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        label=\"Order Date\"\n        fullWidth\n        disabled\n        value={format(order.orderDate, \"MM/DD/YYYY HH:mm:ss\")}\n      />\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        label=\"Company Name\"\n        fullWidth\n        disabled\n        value={order.companyName}\n      />\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        label=\"Last Modified Date\"\n        fullWidth\n        disabled\n        value={format(order.lastModifiedDate, \"MM/DD/YYYY HH:mm:ss\")}\n      />\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        label=\"Total\"\n        fullWidth\n        disabled\n        value={order.totalPrice}\n      />\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        label=\"Status\"\n        fullWidth\n        disabled\n        value={order.status}\n      />\n      <TextField\n        autoFocus\n        margin=\"dense\"\n        label=\"Plan\"\n        fullWidth\n        disabled\n        value={order.plan}\n      />\n    </DialogContent>\n    <DialogActions>\n      <Button onClick={close} color=\"primary\">\n        Cancel\n      </Button>\n    </DialogActions>\n  </div>\n);\n","import React, { Component, Fragment } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nimport { format } from \"date-fns\";\n\nimport OrderTableActions from \"./orderTableActions\";\nimport OrderModal from \"./orderModal\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  },\n  dateHeader: {\n    cursor: \"pointer\"\n  }\n});\n\nclass OrdersTable extends Component {\n  state = { page: 0, sortDirection: \"desc\", modal: false };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  sortByDate = () => {\n    console.log(this.props);\n    this.setState({\n      sortDirection: this.state.sortDirection === \"desc\" ? \"asc\" : \"desc\"\n    });\n    this.props.get(\"\", this.state.sortDirection);\n  };\n\n  selectOrder = order => {\n    this.setState({ modal: true, selected: order });\n  };\n\n  closeModal = () => {\n    console.log(\"tentando chamar o modal close\");\n    this.setState({ modal: false });\n  };\n\n  render() {\n    const { classes, orders } = this.props;\n    return (\n      <Paper className={classes.root} tabIndex={-1}>\n        <Dialog open={this.state.modal}>\n          <OrderModal order={this.state.selected} close={this.closeModal} />\n        </Dialog>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Order Id</TableCell>\n              <TableCell align=\"right\">\n                <Tooltip title=\"Sort\" placement={\"bottom-end\"} enterDelay={300}>\n                  <TableSortLabel\n                    active={true}\n                    direction={this.state.sortDirection}\n                    onClick={() => this.sortByDate()}\n                  >\n                    Order Date\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n              <TableCell align=\"right\">Company Name</TableCell>\n              <TableCell align=\"right\">Last Modified Date</TableCell>\n              <TableCell align=\"right\">Total</TableCell>\n              <TableCell align=\"right\">Status</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {orders.map(order => (\n              <TableRow key={order.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {order.id}\n                </TableCell>\n                <TableCell align=\"right\">\n                  {format(order.orderDate, \"MM/DD/YYYY HH:mm:ss\")}\n                </TableCell>\n                <TableCell align=\"right\">{order.companyName}</TableCell>\n                <TableCell align=\"right\">\n                  {format(order.lastModifiedDate, \"MM/DD/YYYY HH:mm:ss\")}\n                </TableCell>\n                <TableCell align=\"right\">{order.totalPrice}</TableCell>\n                <TableCell align=\"right\">{order.plan}</TableCell>\n                <TableCell align=\"right\">\n                  <Tooltip title=\"Edit\">\n                    <Fab size=\"small\" onClick={() => this.selectOrder(order)}>\n                      <EditIcon />\n                    </Fab>\n                  </Tooltip>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10]}\n                colSpan={3}\n                count={50}\n                rowsPerPage={10}\n                page={this.state.page}\n                onChangePage={this.handleChangePage}\n                ActionsComponent={OrderTableActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </Paper>\n    );\n  }\n}\n\nexport default withStyles(styles)(OrdersTable);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport { getList } from \"../../redux/actions\";\nimport OrdersTable from \"./ordersTable\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  grow: {\n    flexGrow: 1\n  },\n  inputRoot: {\n    color: \"inherit\",\n    width: \"100%\"\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\"\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing.unit * 3,\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n\nclass Orders extends Component {\n  state = {\n    input: \"\"\n  };\n\n  onChange = event => {\n    const filter = event.target.value;\n    if (filter.length > 2) {\n      setTimeout(this.props.get(event.target.value), 1000);\n    } else if (filter.length === 0) {\n      this.props.get();\n    }\n  };\n\n  componentDidMount() {\n    this.props.get();\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Orders\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"Search...\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput\n                }}\n                onChange={this.onChange}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n\n        {this.props.orderList ? (\n          <OrdersTable orders={this.props.orderList} get={this.props.get} />\n        ) : (\n          0\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  orderList: state.ordersReducer.orderList\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    get: (companyName, sort) => {\n      dispatch(getList(1, companyName, sort));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Orders));\n","import { combineReducers } from \"redux\";\n\nimport { GET_LIST } from \"./action_types\";\n\nconst initialState = {\n  orderList: []\n};\n\nconst ordersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LIST:\n      const { orderList } = action.payload;\n      return {\n        ...state,\n        orderList\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ ordersReducer });\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nexport default createStore(reducers, applyMiddleware(thunk));\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Orders from \"./screens/orders/orders\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nconst Main = styled(Orders)`\n  background-color: #eeeeee;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Main />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}